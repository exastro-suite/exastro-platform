openapi: 3.0.3
info:
  title: Exastro Platform API
  description: Exastro Platform API
  version: 1.5.0
servers:
- url: "https://{host}"
  description: API endpoint
  variables:
    host:
      default: localhost
- url: "http://{host}"
  description: API endpoint
  variables:
    host:
      default: localhost
- url: "{protocol}://{host}:{port}"
  description: API endpoint (Development)
  variables:
    protocol:
      default: https
      enum:
      - http
      - https
    host:
      default: localhost
    port:
      default: "30080"
# security:
# - BearerAuth: []
# - BasicAuth: []
tags:
- name: OrganizationService
  description: オーガナイゼーションに関する操作
- name: TokenService
  description: tokenに関する操作
- name: PlanService
  description: プランに関する操作
- name: UsageService
  description: リソース使用量に関する操作
- name: WorkspaceService
  description: ワークスペースに関する操作
- name: UsersService
  description: ユーザーに関する操作
- name: RoleService
  description: ロールに関する操作
- name: RoleMappingsService
  description: ロール・マッピングに関する操作
- name: CommonService
  description: システム管理者共通
- name: InternalCommonService
  description: 共通(内部用)
- name: InternalPlanService
  description: プランに関する操作(内部用)
- name: InternalUsersService
  description: ユーザーに関する操作(内部用)
- name: InternalWorkspaceService
  description: ワークスペースに関する操作(内部用)
paths:
  /api/platform/organizations:
    get:
      tags:
      - OrganizationService
      summary: List returns list of organization
      operationId: organization_list
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.organization_service_controller
    post:
      tags:
      - OrganizationService
      summary: Create creates an organization
      operationId: organization_create
      parameters:
      - name: retry
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          description: \"1\" is retry organization create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organizationCreate'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseOk'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.organization_service_controller
  /api/platform/organizations/{organization_id}:
    delete:
      tags:
      - OrganizationService
      summary: Delete an organization
      operationId: organization_delete
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.organization_service_controller
  /api/{organization_id}/platform/setting:
    get:
      tags:
      - OrganizationService
      summary: get an organization settings
      operationId: organization_setting_get
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.organization_service_controller
    patch:
      tags:
      - OrganizationService
      summary: Update an organization settings
      operationId: organization_setting_update
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organizationSetting'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseOk'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.organization_service_controller
  /auth/realms/{organization_id}/protocol/openid-connect/token:
    post:
      tags:
      - TokenService
      summary: create token
      operationId: token_create
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/tokenRequestBody'
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tokenResponseOK'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tokenResponseError'
      x-openapi-router-controller: controllers.token_service_controller
  /api/{organization_id}/platform/users/_current/refresh_tokens:
    get:
      tags:
      - TokenService
      summary: List returns refresh token
      operationId: refresh_token_list
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.token_service_controller
    delete:
      tags:
      - TokenService
      summary: delete refresh token
      operationId: refresh_token_delete
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.token_service_controller
  /api/platform/users/_current/refresh_tokens:
    get:
      tags:
      - TokenService
      summary: List returns refresh token for system manager
      operationId: refresh_token_list_for_mng
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.token_service_controller
    delete:
      tags:
      - TokenService
      summary: delete refresh token for system manager
      operationId: refresh_token_delete_for_mng
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.token_service_controller
  /api/platform/{organization_id}/plans:
    get:
      tags:
      - PlanService
      summary: Get plan of the organization
      operationId: organization_plan_get
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.plan_service_controller
    post:
      tags:
      - PlanService
      summary: Set plan to the organization
      operationId: organization_plan_create
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/planMappingOrganization'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseOk'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.plan_service_controller
  /api/platform/{organization_id}/plans/{plan_start_datetime}:
    delete:
      tags:
      - PlanService
      summary: Delete plan to the organization
      operationId: organization_plan_delete
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: plan_start_datetime
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 2022-12-01 00:00:00
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseOk'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.plan_service_controller
  /api/platform/plans:
    get:
      tags:
      - PlanService
      summary: List returns list of plans
      operationId: plan_list
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.plan_service_controller
    post:
      tags:
      - PlanService
      summary: Create creates an plan
      operationId: plan_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/plan'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseOk'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.plan_service_controller
  /api/platform/plan_items:
    get:
      tags:
      - PlanService
      summary: List returns list of plan items
      operationId: plan_item_list
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.plan_service_controller
  /api/{organization_id}/platform/limits:
    get:
      tags:
      - PlanService
      summary: Returns the current limits value
      operationId: organization_limits_get
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: limit_id
        in: query
        description: filter limit id. (prefix match)
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: platform.workspaces
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_8'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.plan_service_controller
  /api/platform/usages:
    get:
      tags:
      - UsageService
      summary: List returns list of usage
      operationId: usage_list
      parameters:
      - name: organization_id
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: id
        in: query
        description: filter id. (prefix match)
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: platform.workspaces
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.usage_service_controller
  /api/{organization_id}/platform/usages:
    get:
      tags:
      - UsageService
      summary: Returns the current value of resource
      operationId: organization_usage_get
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: query
        description: filter id. (prefix match)
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: platform.workspaces
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_10'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.usage_service_controller
  /api/platform/settings/common:
    get:
      tags:
      - CommonService
      summary: Returns the current system config value
      operationId: settings_system_config_list
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_11'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.common_service_controller
  /api/platform/settings/common/{config_key}:
    put:
      tags:
      - CommonService
      summary: Update an system config value settings
      operationId: settings_system_config_update
      parameters:
      - name: config_key
        in: path
        description: config key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/systemConfigUpdate'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseOk'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.common_service_controller
  /api/{organization_id}/platform/workspaces:
    get:
      tags:
      - WorkspaceService
      summary: List returns list of workspaces
      operationId: workspace_list
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_name
        in: query
        description: the workspace's name.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_12'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.workspace_service_controller
    post:
      tags:
      - WorkspaceService
      summary: Create creates an workspace
      operationId: workspace_create
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workspace'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.workspace_service_controller
  /api/{organization_id}/platform/workspaces/{workspace_id}:
    get:
      tags:
      - WorkspaceService
      summary: workspace info returns infmation of workspaces
      operationId: workspace_info
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.workspace_service_controller
    put:
      tags:
      - WorkspaceService
      summary: Update updates an workspace
      operationId: workspace_update
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workspaceUpdate'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseOk'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.workspace_service_controller
    delete:
      tags:
      - WorkspaceService
      summary: Delete deletes an workspace
      operationId: workspace_delete
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseOk'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.workspace_service_controller
  /api/{organization_id}/platform/workspaces/{workspace_id}/members:
    get:
      tags:
      - WorkspaceService
      summary: Get all members for the workspace
      operationId: workspace_member_list
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_14'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.workspace_service_controller
  /api/{organization_id}/platform/users:
    get:
      tags:
      - UsersService
      summary: List returns list of users
      operationId: user_list
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: first
        in: query
        description: first result to return
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 0
          default: 0
      - name: max
        in: query
        description: maximum number of results to return
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 100
          default: 100
      - name: search
        in: query
        description: "A String contained in username, first or last name, or email"
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_15'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.users_service_controller
    post:
      tags:
      - UsersService
      summary: Create creates user
      operationId: user_create
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userCreate'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.users_service_controller
  /api/{organization_id}/platform/users/{user_id}:
    get:
      tags:
      - UsersService
      summary: Get a user
      operationId: user_get
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: user_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_16'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.users_service_controller
    put:
      tags:
      - UsersService
      summary: Update a user
      operationId: user_update
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: user_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userUpdate'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.users_service_controller
    delete:
      tags:
      - UsersService
      summary: Delete a user
      operationId: user_delete
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: user_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.users_service_controller
  /api/{organization_id}/platform/roles:
    get:
      tags:
      - RoleService
      summary: List returns list of roles
      operationId: role_list
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: kind
        in: query
        description: role kind.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: workspace
          enum:
          - workspace
          - organization
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_17'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.role_service_controller
    post:
      tags:
      - RoleService
      summary: Create creates an role
      operationId: role_create
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/platform_roles_body'
            examples:
              workspace:
                value:
                  name: role-1
                  description: role description
                  kind: workspace
                  workspaces:
                  - id: workspace-1
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.role_service_controller
  /api/{organization_id}/platform/roles/{role_name}:
    put:
      tags:
      - RoleService
      summary: Update a role
      operationId: role_update
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: role_name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/roles_role_name_body'
            examples:
              workspace:
                value:
                  description: role description
                  kind: workspace
                  workspaces:
                  - id: workspace-1
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.role_service_controller
    delete:
      tags:
      - RoleService
      summary: Delete a role
      operationId: role_delete
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: role_name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.role_service_controller
  /api/{organization_id}/platform/roles/{role_name}/users:
    get:
      tags:
      - RoleMappingsService
      summary: Get user-role mapping for a role
      operationId: role_user_mapping_get
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: role_name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: first
        in: query
        description: first result to return
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 0
          default: 0
      - name: max
        in: query
        description: maximum number of results to return
        required: false
        style: form
        explode: true
        schema:
          type: integer
          example: 100
          default: 100
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_18'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.role_mappings_service_controller
    post:
      tags:
      - RoleMappingsService
      summary: Add roles to the user role mapping
      operationId: role_user_mapping_create
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: role_name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/roleMappingUser'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.role_mappings_service_controller
    patch:
      tags:
      - RoleMappingsService
      summary: Delete roles from user role mapping
      operationId: role_user_mapping_delete
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: role_name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/roleMappingUser'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.role_mappings_service_controller
  /internal-api/alive:
    get:
      tags:
      - InternalCommonService
      summary: alive
      operationId: alive
      parameters:
      - name: User_Id
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Roles
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Language
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.internal_common_service_controller
  /internal-api/platform/settings/common:
    get:
      tags:
      - InternalCommonService
      summary: Returns the current system config value
      operationId: internal_settings_system_config_list
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_11'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.internal_common_service_controller
    post:
      tags:
      - InternalCommonService
      summary: Create creates an system config value
      operationId: internal_settings_system_config_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/systemConfigCreate'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseOk'
        "409":
          description: Duplicate key error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeErrorConflict'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.internal_common_service_controller
  /internal-api/platform/settings/common/{config_key}:
    get:
      tags:
      - InternalCommonService
      summary: Returns the system config key value
      operationId: internal_settings_system_config_item
      parameters:
      - name: config_key
        in: path
        description: config key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_19'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.internal_common_service_controller
    put:
      tags:
      - InternalCommonService
      summary: Update an system config value settings
      operationId: internal_settings_system_config_update
      parameters:
      - name: config_key
        in: path
        description: config key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/systemConfigUpdate'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseOk'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.internal_common_service_controller
    delete:
      tags:
      - InternalCommonService
      summary: delete an system config value settings
      operationId: internal_settings_system_config_delete
      parameters:
      - name: config_key
        in: path
        description: config key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseOk'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.internal_common_service_controller
  /internal-api/{organization_id}/platform/limits:
    get:
      tags:
      - InternalPlanService
      summary: Returns the current limits value
      operationId: internal_organization_limits_get
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: limit_id
        in: query
        description: filter limit id. (prefix match)
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: platform.workspaces
      - name: User_Id
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Roles
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Language
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_8'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.internal_plan_service_controller
  /internal-api/platform/limits:
    get:
      tags:
      - InternalPlanService
      summary: Returns the current limits value
      operationId: limits_get
      parameters:
      - name: limit_id
        in: query
        description: filter limit id. (prefix match)
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: platform.workspaces
      - name: User_Id
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Roles
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Language
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_20'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.internal_plan_service_controller
  /internal-api/platform/plan_items:
    post:
      tags:
      - InternalPlanService
      summary: Create a plan items
      operationId: plan_item_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/planItemList'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseOk'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.internal_plan_service_controller
  /internal-api/platform/plan_items/{limit_id}:
    get:
      tags:
      - InternalPlanService
      summary: Returns of plan item
      operationId: internal_plan_item_get
      parameters:
      - name: limit_id
        in: path
        description: limit id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_21'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.internal_plan_service_controller
    put:
      tags:
      - InternalPlanService
      summary: Update a plan item
      operationId: internal_plan_item_update
      parameters:
      - name: limit_id
        in: path
        description: limit id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/planItemFields'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseOk'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.internal_plan_service_controller
    delete:
      tags:
      - InternalPlanService
      summary: Delete a plan item
      operationId: internal_plan_item_delete
      parameters:
      - name: limit_id
        in: path
        description: limit id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseOk'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.internal_plan_service_controller
  /internal-api/{organization_id}/platform/workspaces/{workspace_id}/roles:
    get:
      tags:
      - InternalWorkspaceService
      summary: Get all roles for the workspace
      operationId: workspace_role_list
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: User_Id
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Roles
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Language
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_22'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.internal_workspace_service_controller
  /internal-api/{organization_id}/platform/workspaces/{workspace_id}/users:
    get:
      tags:
      - InternalWorkspaceService
      summary: Get all users for the workspace
      operationId: workspace_user_list
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: User_Id
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Roles
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Language
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_15'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.internal_workspace_service_controller
  /internal-api/{organization_id}/platform/users/{user_id}/workspaces:
    get:
      tags:
      - InternalUsersService
      summary: workspaces list of user posible
      operationId: user_workspace_list
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: user_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: User_Id
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Roles
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Language
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_23'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.internal_users_service_controller
components:
  schemas:
    responseOk:
      title: A successful base response.
      type: object
      properties:
        result:
          type: integer
          example: 200
        message:
          type: string
          example: SUCCESS
        ts:
          type: string
          format: date-time
      example:
        result: 200
        message: SUCCESS
        ts: 2000-01-23T04:56:07.000+00:00
    responseStat:
      type: object
      properties:
        create_timestamp:
          type: string
          format: date-time
        create_user:
          type: string
        last_update_timestamp:
          type: string
          format: date-time
        last_update_user:
          type: string
    runtimeError:
      type: object
      properties:
        result:
          type: integer
          format: int32
          example: 500
        message:
          type: string
          example: Error Message
        ts:
          type: string
          format: date-time
        data:
          type: object
    runtimeErrorConflict:
      type: object
      properties:
        result:
          type: integer
          format: int32
          example: 409
        message:
          type: string
          example: Error Message
        ts:
          type: string
          format: date-time
        data:
          type: object
    organization:
      title: organization is a definition of Organization resource.
      type: object
      properties:
        id:
          type: string
          example: org1
        name:
          type: string
          example: name of org1
        organization_managers:
          type: array
          items:
            $ref: '#/components/schemas/usernameOnly'
        active_plan:
          $ref: '#/components/schemas/organization_active_plan'
        plans:
          type: array
          items:
            $ref: '#/components/schemas/planMappingOrganization'
        enabled:
          type: boolean
          description: organization enabled(true) or disabled(false)
          example: true
        status:
          type: string
          example: Organization Create Complete
    organizationCreate:
      title: organization is a definition of Organization resource.
      required:
      - id
      type: object
      properties:
        id:
          type: string
          example: org1
        name:
          type: string
          example: organization of org1
        organization_managers:
          type: array
          items:
            $ref: '#/components/schemas/organizationUserCreate'
        plan:
          $ref: '#/components/schemas/organization_active_plan'
        options:
          type: object
          description: Organization Add Json Parameter (json of KeyCloak)
    organizationUserCreate:
      title: organization-user is a definition of User resource.
      required:
      - username
      type: object
      properties:
        username:
          type: string
          example: user-id
        email:
          type: string
          example: user e-mail address
        firstName:
          type: string
        lastName:
          type: string
        credentials:
          type: array
          items:
            $ref: '#/components/schemas/userCredentials'
        requiredActions:
          $ref: '#/components/schemas/userRequiredActions'
        enabled:
          type: boolean
    organizationList:
      title: A list of organizational resources.
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/organization'
    organizationSetting:
      title: organizationSetting is a definition of oraganaization setting resource.
      type: object
      properties:
        token:
          $ref: '#/components/schemas/organizationSetting_token'
    planMappingOrganization:
      required:
      - id
      - start_datetime
      type: object
      properties:
        id:
          type: string
          example: plan-1
        start_datetime:
          type: string
          example: 2022-12-01 00:00:00
    planMappingOrganizationList:
      title: plan item list is list of plan items resources.
      type: object
      properties:
        data:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/planMappingOrganization'
            - $ref: '#/components/schemas/responseStat'
    plan:
      title: plan is a definition of Plan resource.
      type: object
      properties:
        id:
          type: string
          example: plan-1
        name:
          type: string
          example: name of plan
        informations:
          $ref: '#/components/schemas/plan_informations'
        limits:
          $ref: '#/components/schemas/plan_limits'
    planList:
      title: planList is list of Plan resources.
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/plan'
    planItem:
      title: planItem is a definition of plan item resource.
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: limit id
            example: platform.workspaces
      - $ref: '#/components/schemas/planItemFields'
    planItemList:
      title: plan item list is list of plan items resources.
      type: array
      example:
      - id: platform.workspaces
        informations:
          description: max workspaces
          max: 1000
          default: 100
      items:
        $ref: '#/components/schemas/planItem'
    planItemFields:
      title: planItem is a definition of plan item resource.
      type: object
      properties:
        informations:
          $ref: '#/components/schemas/planItemFields_informations'
    limits:
      title: limitValue is a definition of Limit Value resource.
      type: object
      properties:
        data:
          $ref: '#/components/schemas/plan_limits'
    limitsList:
      title: limitValue is a definition of Limit Value resource.
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/limitsList_data'
    usage:
      title: usage is a definition of current value resource.
      type: object
      properties:
        id:
          type: string
          example: platform.workspaces
        current_value:
          type: number
          example: 100
    usageList:
      title: usageList is list of usage resources.
      type: object
      properties:
        data:
          type: array
          example:
          - id: platform.workspaces
            current_value: 100
          - id: platform.users
            current_value: 200
          - id: platform.roles
            current_value: 300
          items:
            $ref: '#/components/schemas/usage'
    usageOrganizationList:
      title: usageList is list of usage resources.
      type: object
      properties:
        data:
          type: array
          example:
          - organization_id: organization_1
            usages:
            - id: platform.workspaces
              current_value: 101
            - id: platform.users
              current_value: 102
            - id: platform.roles
              current_value: 103
          - organization_id: organization_2
            usages:
            - id: platform.workspaces
              current_value: 201
            - id: platform.users
              current_value: 202
            - id: platform.roles
              current_value: 203
          items:
            $ref: '#/components/schemas/usageOrganizationList_data'
    role:
      title: role is a definition of Role resource.
      type: object
      properties:
        name:
          type: string
          example: role-1
    roleList:
      title: roleList is list of Role resources.
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/role'
    usernameOnly:
      title: username of User resource.
      type: object
      properties:
        username:
          type: string
    user:
      title: user is a definition of User resource.
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: firstname lastname
        firstName:
          type: string
        lastName:
          type: string
        preferred_username:
          type: string
        affiliation:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        create_timestamp:
          type: string
          format: date-time
    userList:
      title: userList is list of User resources.
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/user'
    userCreate:
      title: user is a definition of User resource.
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
          example: user-id
        password:
          type: string
          example: password
        password_temporary:
          type: boolean
          default: true
        email:
          type: string
          example: user e-mail address
        firstName:
          type: string
        lastName:
          type: string
        affiliation:
          type: string
        description:
          type: string
        enabled:
          type: boolean
          default: true
    userUpdate:
      title: userUpate is a definition of User resource.
      type: object
      properties:
        password:
          type: string
          example: password
        password_temporary:
          type: boolean
          default: true
        email:
          type: string
          example: user e-mail address
        firstName:
          type: string
        lastName:
          type: string
        affiliation:
          type: string
        description:
          type: string
        enabled:
          type: boolean
          default: true
    userCredentials:
      title: userCredentials is Credentials of User resources.
      type: object
      properties:
        type:
          type: string
          example: password
        value:
          type: string
          example: password
        temporary:
          type: boolean
          example: true
    userRequiredActions:
      title: userRequiredActions is RequiredActions of User resources.
      type: array
      items:
        type: string
        description: \"UPDATE_PROFILE\" or \"UPDATE_PASSWORD\" or \"VERIFY EMAIL\"
          or \"UPDATE USER LOCAL\" or \"CONFIGURE OTP\"
        example: UPDATE_PROFILE
    member:
      title: member is a definition of Member resource.
      type: object
      properties:
        name:
          type: string
          example: firstname lastname
        firstName:
          type: string
        lastName:
          type: string
    memberList:
      title: memberList is list of Member resources.
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/member'
    workspace:
      title: workspace is a definition of Workspace resource.
      type: object
      properties:
        id:
          type: string
          example: workspace-1
        name:
          type: string
          example: name of workspace
        informations:
          $ref: '#/components/schemas/workspace_informations'
    workspaceList:
      title: workspaceList is list of Workspace resources.
      type: object
      properties:
        data:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/workspace'
            - $ref: '#/components/schemas/responseStat'
    workspaceUpdate:
      title: workspace is a definition for workspace updates.
      type: object
      properties:
        name:
          type: string
          example: name of workspace
        informations:
          $ref: '#/components/schemas/workspaceUpdate_informations'
    userWorkspace:
      title: workspace is a definition of Workspace resource.
      type: object
      properties:
        id:
          type: string
          example: workspace-1
        name:
          type: string
          example: name of workspace
        create_timestamp:
          type: string
          format: date-time
        last_update_timestamp:
          type: string
          format: date-time
    userWorkspaceList:
      title: WorkspaceList is a list of workspace resources that users can access.
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/userWorkspace'
    environment:
      title: environments is a definition of Workspace information resource.
      type: object
      properties:
        name:
          type: string
          example: staging
    workspace_administrator:
      title: workspace_administrator is a definition of Workspace information resource.
      type: object
      properties:
        id:
          type: string
          example: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    roleDetailList:
      title: WorkspaceList is a list of workspace resources that users can access.
      type: object
      properties:
        data:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/roleDetailWorkspace'
            - $ref: '#/components/schemas/roleDetailOrganization'
    roleDetailOrganization:
      title: role is a definition of Role resource.
      type: object
      properties:
        name:
          type: string
          example: organization-role-1
        description:
          type: string
          example: role description
        kind:
          type: string
          example: organization
        authorities:
          type: array
          items:
            $ref: '#/components/schemas/roleDetailOrganization_authorities'
    roleDetailWorkspace:
      title: role is a definition of Role resource.
      type: object
      properties:
        name:
          type: string
          example: role-1
        description:
          type: string
          example: role description
        kind:
          type: string
          example: workspace
        authorities:
          type: array
          items:
            $ref: '#/components/schemas/roleDetailWorkspace_authorities'
        workspaces:
          type: array
          items:
            $ref: '#/components/schemas/roleDetailWorkspace_workspaces'
    roleDetailWorkspacePut:
      title: role is a definition of Role resource.
      type: object
      properties:
        description:
          type: string
          example: role description
        kind:
          type: string
          example: workspace
        workspaces:
          type: array
          items:
            $ref: '#/components/schemas/roleDetailWorkspace_workspaces'
    roleMappingUser:
      title: userList is list of User resources.
      type: array
      example:
      - preferred_username: username-1
      - preferred_username: username-2
      - preferred_username: username-3
      items:
        $ref: '#/components/schemas/roleUser'
    roleUser:
      title: role mapping user is a definition of User resource.
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: firstname lastname
        firstName:
          type: string
        lastName:
          type: string
        preferred_username:
          type: string
        enabled:
          type: boolean
        affiliation:
          type: string
        description:
          type: string
        create_timestamp:
          type: string
          format: date-time
    tokenRequestBody:
      title: create refresh token request parameter.
      type: object
      properties:
        client_id:
          type: string
          example: "_{organization_id}-api"
        grant_type:
          type: string
          description: '"password" or "refresh_token"'
        scope:
          type: string
          description: Specified when grant_type = "password"
          example: openid offline_access
        username:
          type: string
          description: Specified when grant_type = "password"
        password:
          type: string
          description: Specified when grant_type = "password"
          example: password
        totp:
          type: string
          description: one time password. Specified when grant_type = "password" and
            two-fatctor-authnication
          example: "123456"
        refresh_token:
          type: string
          description: Specified when grant_type = "refresh_token"
    tokenResponseOK:
      title: A successful create token.
      type: object
      properties:
        access_token:
          type: string
        expires_in:
          type: integer
        refresh_token:
          type: string
        id_token:
          type: string
        not-before-policy:
          type: integer
        session_state:
          type: string
          format: uuid
        scope:
          type: string
          example: openid profile offline_access email
      example:
        access_token: access_token
        refresh_token: refresh_token
        not-before-policy: 6
        scope: openid profile offline_access email
        id_token: id_token
        session_state: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        expires_in: 0
    tokenResponseError:
      title: A successful create token.
      type: object
      properties:
        error:
          type: string
          example: invalid_grant
        error_description:
          type: string
          example: Invalid user credentials
    tokenRefreshList:
      title: roleList is list of Role resources.
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/tokenRefreshList_data'
    systemConfig:
      title: system config is a definition of system config resource.
      type: object
      properties:
        key:
          type: string
          description: config key
          example: platform.max_organization
        value:
          type: string
          description: config value
          example: "100"
        description:
          type: string
          description: config description
          example: platform max organization
    systemConfigList:
      title: system config list is list of system config resources.
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/systemConfig'
    systemConfigCreate:
      title: system config value is a definition of system config resource.
      type: array
      example:
      - key: platform.max_organization
        value: "100"
        description: platform max organization
      items:
        $ref: '#/components/schemas/systemConfig'
    systemConfigUpdate:
      title: system config is a definition of system config resource.
      required:
      - value
      type: object
      properties:
        value:
          type: string
          description: config value
        description:
          type: string
          description: config description
      example:
        value: "100"
        description: max organization
    systemConfigValue:
      title: system config is a definition of system config resource.
      type: object
      properties:
        value:
          type: string
          description: config value
        description:
          type: string
          description: config description
      example:
        value: 100
        description: ""
    inline_response_200:
      allOf:
      - $ref: '#/components/schemas/responseOk'
      - $ref: '#/components/schemas/organizationList'
    inline_response_200_1:
      allOf:
      - $ref: '#/components/schemas/responseOk'
    inline_response_200_2:
      allOf:
      - $ref: '#/components/schemas/responseOk'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/organizationSetting'
    inline_response_200_3:
      allOf:
      - $ref: '#/components/schemas/responseOk'
      - $ref: '#/components/schemas/tokenRefreshList'
    inline_response_200_4:
      allOf:
      - $ref: '#/components/schemas/responseOk'
      - type: object
        properties:
          data:
            type: object
    inline_response_200_5:
      allOf:
      - $ref: '#/components/schemas/responseOk'
      - $ref: '#/components/schemas/planMappingOrganizationList'
    inline_response_200_6:
      allOf:
      - $ref: '#/components/schemas/responseOk'
      - $ref: '#/components/schemas/planList'
    inline_response_200_7:
      allOf:
      - $ref: '#/components/schemas/responseOk'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/planItemList'
    inline_response_200_8:
      allOf:
      - $ref: '#/components/schemas/responseOk'
      - $ref: '#/components/schemas/limits'
    inline_response_200_9:
      allOf:
      - $ref: '#/components/schemas/responseOk'
      - $ref: '#/components/schemas/usageOrganizationList'
    inline_response_200_10:
      allOf:
      - $ref: '#/components/schemas/responseOk'
      - $ref: '#/components/schemas/usageList'
    inline_response_200_11:
      allOf:
      - $ref: '#/components/schemas/responseOk'
      - $ref: '#/components/schemas/systemConfigList'
    inline_response_200_12:
      allOf:
      - $ref: '#/components/schemas/responseOk'
      - $ref: '#/components/schemas/workspaceList'
    inline_response_200_13:
      allOf:
      - $ref: '#/components/schemas/responseOk'
      - title: workspaceDetail is Workspace resources.
        type: object
        properties:
          data:
            allOf:
            - $ref: '#/components/schemas/workspace'
            - $ref: '#/components/schemas/responseStat'
    inline_response_200_14:
      allOf:
      - $ref: '#/components/schemas/responseOk'
      - $ref: '#/components/schemas/memberList'
    inline_response_200_15:
      allOf:
      - $ref: '#/components/schemas/responseOk'
      - $ref: '#/components/schemas/userList'
    inline_response_200_16:
      allOf:
      - $ref: '#/components/schemas/responseOk'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/user'
    inline_response_200_17:
      allOf:
      - $ref: '#/components/schemas/responseOk'
      - $ref: '#/components/schemas/roleDetailList'
    platform_roles_body:
      oneOf:
      - $ref: '#/components/schemas/roleDetailWorkspace'
    roles_role_name_body:
      oneOf:
      - $ref: '#/components/schemas/roleDetailWorkspacePut'
    inline_response_200_18:
      allOf:
      - $ref: '#/components/schemas/responseOk'
      - title: roleList is list of Role resources.
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/roleUser'
    inline_response_200_19:
      allOf:
      - $ref: '#/components/schemas/responseOk'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/systemConfig'
    inline_response_200_20:
      allOf:
      - $ref: '#/components/schemas/responseOk'
      - $ref: '#/components/schemas/limitsList'
    inline_response_200_21:
      allOf:
      - $ref: '#/components/schemas/responseOk'
      - type: object
        properties:
          data:
            $ref: '#/components/schemas/planItem'
    inline_response_200_22:
      allOf:
      - $ref: '#/components/schemas/responseOk'
      - $ref: '#/components/schemas/roleList'
    inline_response_200_23:
      allOf:
      - $ref: '#/components/schemas/responseOk'
      - $ref: '#/components/schemas/userWorkspaceList'
    organization_active_plan:
      type: object
      properties:
        id:
          type: string
          example: plan-1
    organizationSetting_token:
      type: object
      properties:
        refresh_token_max_lifespan_enabled:
          type: boolean
          example: true
        refresh_token_max_lifespan_days:
          maximum: 1095
          minimum: 1
          type: integer
          example: 365
        access_token_lifespan_minutes:
          maximum: 10080
          minimum: 1
          type: integer
          example: 1440
    plan_informations:
      type: object
      properties:
        description:
          type: string
    plan_limits:
      type: object
      properties:
        limit.id:
          type: number
      example: "{\"platform.workspaces\":500,\"platform.roles\":500,\"platform.users\"\
        :1000}"
    planItemFields_informations:
      type: object
      properties:
        description:
          type: string
        max:
          type: integer
          example: 10000
        default:
          type: integer
          example: 1000
    limitsList_data:
      type: object
      properties:
        organization_id:
          type: string
          example: organization_id
        limits:
          $ref: '#/components/schemas/plan_limits'
    usageOrganizationList_data:
      type: object
      properties:
        organization_id:
          type: string
        usages:
          type: array
          items:
            $ref: '#/components/schemas/usage'
    workspace_informations:
      type: object
      properties:
        description:
          type: string
        environments:
          type: array
          items:
            $ref: '#/components/schemas/environment'
        workspace_administrators:
          type: array
          items:
            $ref: '#/components/schemas/workspace_administrator'
    workspaceUpdate_informations:
      type: object
      properties:
        description:
          type: string
        environments:
          type: array
          items:
            $ref: '#/components/schemas/environment'
    roleDetailOrganization_authorities:
      type: object
      properties:
        name:
          type: string
          example: _og-upd
    roleDetailWorkspace_authorities:
      type: object
      properties:
        name:
          type: string
      example: "[{\"name\":\"_workspace-1-admin\"},{\"name\":\"workspace-1\"}]"
    roleDetailWorkspace_workspaces:
      type: object
      properties:
        id:
          type: string
          example: workspace-1
    tokenRefreshList_data:
      type: object
      properties:
        id:
          type: string
          format: uuid
        start_timestamp:
          type: string
          format: date-time
        lastaccess_timestamp:
          type: string
          format: date-time
        expire_timestamp:
          type: string
          format: date-time
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
  securitySchemes:
    BearerAuth:
      type: http
      description: Credentials or access token for API
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: swagger_server.controllers.authorization_controller.check_BearerAuth
    BasicAuth:
      type: http
      description: Value converted from ID/Password in base64
      scheme: basic
      x-basicInfoFunc: swagger_server.controllers.authorization_controller.check_BasicAuth

