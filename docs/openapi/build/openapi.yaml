openapi: 3.0.3
info:
  title: Exastro Platform API
  description: Exastro Platform API
  version: 1.0.0
servers:
  - url: /
tags:
  - name: OrganizationService
    description: オーガナイゼーションに関する操作
  - name: WorkspaceService
    description: ワークスペースに関する操作
  - name: UsersService
    description: ユーザーに関する操作
  - name: InternalCommonService
    description: 共通(内部用)
  - name: InternalUsersService
    description: ユーザーに関する操作(内部用)
  - name: InternalWorkspaceService
    description: ワークスペースに関する操作(内部用)
paths:
  /api/platform/organizations:
    post:
      tags:
        - OrganizationService
      summary: Create creates an organization
      x-openapi-router-controller: controllers.organization_service_controller
      operationId: organization_create
      parameters:
        - name: retry
          in: query
          schema:
            type: string
            description: \"1\" is retry organization create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organizationCreate'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseOk'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/api/{organization_id}/platform/workspaces':
    get:
      tags:
        - WorkspaceService
      summary: List returns list of workspaces
      x-openapi-router-controller: controllers.workspace_service_controller
      operationId: workspace_list
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: workspace_name
          in: query
          description: the workspace's name.
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/workspaceList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    post:
      tags:
        - WorkspaceService
      summary: Create creates an workspace
      x-openapi-router-controller: controllers.workspace_service_controller
      operationId: workspace_create
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workspace'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/api/{organization_id}/platform/workspaces/{workspace_id}':
    get:
      tags:
        - WorkspaceService
      summary: workspace info returns infmation of workspaces
      x-openapi-router-controller: controllers.workspace_service_controller
      operationId: workspace_info
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - title: workspaceDetail is Workspace resources.
                    type: object
                    properties:
                      data:
                        allOf:
                          - $ref: '#/components/schemas/workspace'
                          - $ref: '#/components/schemas/responseStat'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/api/{organization_id}/platform/workspaces/{workspace_id}/members':
    get:
      tags:
        - WorkspaceService
      summary: Get all members for the workspace
      x-openapi-router-controller: controllers.workspace_service_controller
      operationId: workspace_member_list
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/memberList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/internal-api/{organization_id}/platform/workspaces/{workspace_id}/roles':
    get:
      tags:
        - InternalWorkspaceService
      summary: Get all roles for the workspace
      x-openapi-router-controller: controllers.internal_workspace_service_controller
      operationId: workspace_role_list
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
        - name: User-Id
          in: header
          required: true
          schema:
            type: string
        - name: Roles
          in: header
          required: true
          schema:
            type: string
        - name: Language
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/roleList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/internal-api/{organization_id}/platform/workspaces/{workspace_id}/users':
    get:
      tags:
        - InternalWorkspaceService
      summary: Get all users for the workspace
      x-openapi-router-controller: controllers.internal_workspace_service_controller
      operationId: workspace_user_list
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
        - name: User-Id
          in: header
          required: true
          schema:
            type: string
        - name: Roles
          in: header
          required: true
          schema:
            type: string
        - name: Language
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/userList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/internal-api/{organization_id}/platform/users/{user_id}/workspaces':
    get:
      tags:
        - InternalUsersService
      summary: workspaces list of user posible
      operationId: user_workspace_list
      parameters:
        - name: organization_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: user_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: User-Id
          in: header
          required: true
          schema:
            type: string
        - name: Roles
          in: header
          required: true
          schema:
            type: string
        - name: Language
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/userWorkspaceList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.internal_users_service_controller
  /internal-api/alive:
    get:
      tags:
        - InternalCommonService
      summary: alive
      x-openapi-router-controller: controllers.internal_common_service_controller
      operationId: alive
      parameters:
        - name: User-Id
          in: header
          required: true
          schema:
            type: string
        - name: Roles
          in: header
          required: true
          schema:
            type: string
        - name: Language
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
components:
  schemas:
    responseOk:
      title: A successful base response.
      type: object
      properties:
        result:
          type: integer
          example: 200
        message:
          type: string
          example: SUCCESS
        ts:
          type: string
          format: date-time
    responseStat:
      type: object
      properties:
        create_timestamp:
          type: string
          format: date-time
        create_user:
          type: string
        last_update_timestamp:
          type: string
          format: date-time
        last_update_user:
          type: string
    runtimeError:
      type: object
      properties:
        result:
          type: integer
          format: int32
          example: 500
        message:
          type: string
          example: Error Message
        ts:
          type: string
          format: date-time
        data:
          type: object
          example: null
    organizationCreate:
      title: organization is a definition of Organization resource.
      type: object
      properties:
        id:
          type: string
          example: org1
        name:
          type: string
          example: organization of org1
        organization_managers:
          type: array
          items:
            $ref: '#/components/schemas/userCreate'
        options:
          type: object
          description: Organization Add Json Parameter (json of KeyCloak)
      required:
        - id
    role:
      title: role is a definition of Role resource.
      type: object
      properties:
        name:
          type: string
          example: role-1
    roleList:
      title: roleList is list of Role resources.
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/role'
    user:
      title: user is a definition of User resource.
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: firstname lastname
        firstName:
          type: string
        lastName:
          type: string
        preferred_username:
          type: string
        enabled:
          type: boolean
        create_timestamp:
          type: string
          format: date-time
    userList:
      title: userList is list of User resources.
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/user'
    userCreate:
      title: user is a definition of User resource.
      type: object
      properties:
        username:
          type: string
          example: user-id
        email:
          type: string
          example: user e-mail address
        firstName:
          type: string
        lastName:
          type: string
        credentials:
          type: array
          items:
            $ref: '#/components/schemas/userCredentials'
        requiredActions:
          $ref: '#/components/schemas/userRequiredActions'
        enabled:
          type: boolean
      required:
        - username
    userCredentials:
      title: userCredentials is Credentials of User resources.
      type: object
      properties:
        type:
          type: string
          example: password
        value:
          type: string
          example: password
        temporary:
          type: boolean
          example: true
    userRequiredActions:
      title: userRequiredActions is RequiredActions of User resources.
      type: array
      items:
        type: string
        example: UPDATE_PROFILE
        description: \"UPDATE_PROFILE\" or \"UPDATE_PASSWORD\" or \"VERIFY EMAIL\" or \"UPDATE USER LOCAL\" or \"CONFIGURE OTP\"
    member:
      title: member is a definition of Member resource.
      type: object
      properties:
        name:
          type: string
          example: firstname lastname
        firstName:
          type: string
        lastName:
          type: string
    memberList:
      title: memberList is list of Member resources.
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/member'
    workspace:
      title: workspace is a definition of Workspace resource.
      type: object
      properties:
        id:
          type: string
          example: workspace-1
        name:
          type: string
          example: name of workspace
        informations:
          type: object
          properties:
            description:
              type: string
            environments:
              type: array
              items:
                $ref: '#/components/schemas/environment'
            workspace_administrators:
              type: array
              items:
                $ref: '#/components/schemas/workspace_administrator'
    workspaceList:
      title: workspaceList is list of Workspace resources.
      type: object
      properties:
        data:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/workspace'
              - $ref: '#/components/schemas/responseStat'
    userWorkspace:
      title: workspace is a definition of Workspace resource.
      type: object
      properties:
        id:
          type: string
          example: workspace-1
        name:
          type: string
          example: name of workspace
        create_timestamp:
          type: string
          format: date-time
        last_update_timestamp:
          type: string
          format: date-time
    userWorkspaceList:
      title: WorkspaceList is a list of workspace resources that users can access.
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/userWorkspace'
    environment:
      title: environments is a definition of Workspace information resource.
      type: object
      properties:
        name:
          type: string
          example: staging
    workspace_administrator:
      title: workspace_administrator is a definition of Workspace information resource.
      type: object
      properties:
        id:
          type: string
          example: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
