openapi: 3.0.3
info:
  title: Exastro Platform API
  description: Exastro Platform API
  version: 1.7.0
servers:
  - url: 'https://{host}'
    description: API endpoint
    variables:
      host:
        default: localhost
  - url: 'http://{host}'
    description: API endpoint
    variables:
      host:
        default: localhost
  - url: '{protocol}://{host}:{port}'
    description: API endpoint (Development)
    variables:
      protocol:
        enum:
          - http
          - https
        default: https
      host:
        default: localhost
      port:
        default: '30080'
tags:
  - name: OrganizationService
    description: オーガナイゼーションに関する操作
  - name: TokenService
    description: tokenに関する操作
  - name: PlanService
    description: プランに関する操作
  - name: UsageService
    description: リソース使用量に関する操作
  - name: WorkspaceService
    description: ワークスペースに関する操作
  - name: UsersService
    description: ユーザーに関する操作
  - name: RoleService
    description: ロールに関する操作
  - name: RoleMappingsService
    description: ロール・マッピングに関する操作
  - name: CommonService
    description: システム管理者共通
  - name: MaintenanceModeService
    description: メンテナンスモードに関する操作
  - name: NotificationService
    description: 通知機能に関する操作
  - name: InternalCommonService
    description: 共通(内部用)
  - name: InternalPlanService
    description: プランに関する操作(内部用)
  - name: InternalUsersService
    description: ユーザーに関する操作(内部用)
  - name: InternalWorkspaceService
    description: ワークスペースに関する操作(内部用)
  - name: InternalMaintenanceModeService
    description: メンテナンスモードに関する操作(内部用)
  - name: InternalNotificationService
    description: 通知機能に関する操作(内部用)
paths:
  /api/platform/organizations:
    get:
      tags:
        - OrganizationService
      summary: List returns list of organization
      x-openapi-router-controller: controllers.organization_service_controller
      operationId: organization_list
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/organizationList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    post:
      tags:
        - OrganizationService
      summary: Create creates an organization
      x-openapi-router-controller: controllers.organization_service_controller
      operationId: organization_create
      parameters:
        - name: retry
          in: query
          schema:
            type: string
            description: \"1\" is retry organization create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organizationCreate'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseOk'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/api/platform/organizations/{organization_id}':
    get:
      tags:
        - OrganizationService
      summary: get organization
      x-openapi-router-controller: controllers.organization_service_controller
      operationId: organization_get
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/organization'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    put:
      tags:
        - OrganizationService
      summary: update an organization
      x-openapi-router-controller: controllers.organization_service_controller
      operationId: organization_update
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - title: organization is a definition of Organization resource.
                  type: object
                  properties:
                    name:
                      type: string
                      example: name of org1
                    enabled:
                      type: boolean
                      description: organization enabled(true) or disabled(false)
                      example: true
                  required:
                    - name
                    - enabled
            examples:
              organization:
                value:
                  name: name of org1
                  enabled: true
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    delete:
      tags:
        - OrganizationService
      summary: Delete an organization
      x-openapi-router-controller: controllers.organization_service_controller
      operationId: organization_delete
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/api/{organization_id}/platform/setting':
    get:
      tags:
        - OrganizationService
      summary: get an organization settings
      x-openapi-router-controller: controllers.organization_service_controller
      operationId: organization_setting_get
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/organizationSetting'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    patch:
      tags:
        - OrganizationService
      summary: Update an organization settings
      x-openapi-router-controller: controllers.organization_service_controller
      operationId: organization_setting_update
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organizationSetting'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseOk'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/auth/realms/{organization_id}/protocol/openid-connect/token':
    post:
      tags:
        - TokenService
      summary: create token
      x-openapi-router-controller: controllers.token_service_controller
      operationId: token_create
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/tokenRequestBody'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tokenResponseOK'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tokenResponseError'
  '/api/{organization_id}/platform/users/_current/refresh_tokens':
    get:
      tags:
        - TokenService
      summary: List returns refresh token
      x-openapi-router-controller: controllers.token_service_controller
      operationId: refresh_token_list
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/tokenRefreshList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    delete:
      tags:
        - TokenService
      summary: delete refresh token
      x-openapi-router-controller: controllers.token_service_controller
      operationId: refresh_token_delete
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  /api/platform/users/_current/refresh_tokens:
    get:
      tags:
        - TokenService
      summary: List returns refresh token for system manager
      x-openapi-router-controller: controllers.token_service_controller
      operationId: refresh_token_list_for_mng
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/tokenRefreshList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    delete:
      tags:
        - TokenService
      summary: delete refresh token for system manager
      x-openapi-router-controller: controllers.token_service_controller
      operationId: refresh_token_delete_for_mng
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/api/platform/{organization_id}/plans':
    get:
      tags:
        - PlanService
      summary: Get plan of the organization
      x-openapi-router-controller: controllers.plan_service_controller
      operationId: organization_plan_get
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/planMappingOrganizationList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    post:
      tags:
        - PlanService
      summary: Set plan to the organization
      x-openapi-router-controller: controllers.plan_service_controller
      operationId: organization_plan_create
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/planMappingOrganization'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseOk'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/api/platform/{organization_id}/plans/{plan_start_datetime}':
    delete:
      tags:
        - PlanService
      summary: Delete plan to the organization
      x-openapi-router-controller: controllers.plan_service_controller
      operationId: organization_plan_delete
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: plan_start_datetime
          in: path
          required: true
          schema:
            type: string
            example: '2022-12-01 00:00:00'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseOk'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  /api/platform/plans:
    get:
      tags:
        - PlanService
      summary: List returns list of plans
      x-openapi-router-controller: controllers.plan_service_controller
      operationId: plan_list
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/planList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    post:
      tags:
        - PlanService
      summary: Create creates an plan
      x-openapi-router-controller: controllers.plan_service_controller
      operationId: plan_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/plan'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseOk'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  /api/platform/plan_items:
    get:
      tags:
        - PlanService
      summary: List returns list of plan items
      x-openapi-router-controller: controllers.plan_service_controller
      operationId: plan_item_list
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/planItemList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/api/{organization_id}/platform/limits':
    get:
      tags:
        - PlanService
      summary: Returns the current limits value
      x-openapi-router-controller: controllers.plan_service_controller
      operationId: organization_limits_get
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: limit_id
          in: query
          description: filter limit id. (prefix match)
          schema:
            type: string
            example: platform.workspaces
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/limits'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  /api/platform/usages:
    get:
      tags:
        - UsageService
      summary: List returns list of usage
      x-openapi-router-controller: controllers.usage_service_controller
      operationId: usage_list
      parameters:
        - name: organization_id
          in: query
          schema:
            type: string
        - name: id
          in: query
          description: filter id. (prefix match)
          schema:
            type: string
            example: platform.workspaces
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/usageOrganizationList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/api/{organization_id}/platform/usages':
    get:
      tags:
        - UsageService
      summary: Returns the current value of resource
      x-openapi-router-controller: controllers.usage_service_controller
      operationId: organization_usage_get
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: query
          description: filter id. (prefix match)
          schema:
            type: string
            example: platform.workspaces
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/usageList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  /api/platform/settings/common:
    get:
      tags:
        - CommonService
      summary: Returns the current system config value
      x-openapi-router-controller: controllers.common_service_controller
      operationId: settings_system_config_list
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/systemConfigList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/api/platform/settings/common/{config_key}':
    put:
      tags:
        - CommonService
      summary: Update an system config value settings
      x-openapi-router-controller: controllers.common_service_controller
      operationId: settings_system_config_update
      parameters:
        - name: config_key
          in: path
          required: true
          schema:
            type: string
          description: config key
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/systemConfigUpdate'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseOk'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/api/{organization_id}/platform/workspaces':
    get:
      tags:
        - WorkspaceService
      summary: List returns list of workspaces
      x-openapi-router-controller: controllers.workspace_service_controller
      operationId: workspace_list
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: workspace_name
          in: query
          description: the workspace's name.
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/workspaceList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    post:
      tags:
        - WorkspaceService
      summary: Create creates an workspace
      x-openapi-router-controller: controllers.workspace_service_controller
      operationId: workspace_create
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workspace'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/api/{organization_id}/platform/workspaces/{workspace_id}':
    get:
      tags:
        - WorkspaceService
      summary: workspace info returns infmation of workspaces
      x-openapi-router-controller: controllers.workspace_service_controller
      operationId: workspace_info
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - title: workspaceDetail is Workspace resources.
                    type: object
                    properties:
                      data:
                        allOf:
                          - $ref: '#/components/schemas/workspace'
                          - $ref: '#/components/schemas/responseStat'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    put:
      tags:
        - WorkspaceService
      summary: Update updates an workspace
      x-openapi-router-controller: controllers.workspace_service_controller
      operationId: workspace_update
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workspaceUpdate'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseOk'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    delete:
      tags:
        - WorkspaceService
      summary: Delete deletes an workspace
      x-openapi-router-controller: controllers.workspace_service_controller
      operationId: workspace_delete
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseOk'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/api/{organization_id}/platform/workspaces/{workspace_id}/members':
    get:
      tags:
        - WorkspaceService
      summary: Get all members for the workspace
      x-openapi-router-controller: controllers.workspace_service_controller
      operationId: workspace_member_list
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/memberList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/api/{organization_id}/platform/workspaces/{workspace_id}/settings/notifications':
    get:
      tags:
        - NotificationService
      summary: List returns list of settings notifications
      x-openapi-router-controller: controllers.notification_service_controller
      operationId: settings_notification_list
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
        - name: event_type_true
          in: query
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
          description: 'When acquiring information where event_type is True, specify the corresponding item name'
          example: 'event_type_true=ita.event_type.new,ita.event_type.timeout'
        - name: event_type_false
          in: query
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
          description: 'When acquiring information where event_type is False, specify the corresponding item name'
          example: 'event_type_false=ita.event_type.evaluated,ita.event_type.undetected'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/settingsDestinationList'
              examples:
                mail settings:
                  value:
                    result: 200
                    message: SUCCESS
                    ts: '2023-11-02T05:36:41.258Z'
                    data:
                      - id: 00000001Z7ZXFAED6872F6C9W8
                        name: destinations of mail settings
                        kind: Mail
                        conditions:
                          ita:
                            event_type:
                              new: false
                              evaluated: false
                              timeout: true
                              undetected: true
                        destination_informations:
                          - address_header: to
                            email: mike@example.com
                          - address_header: cc
                            email: tommy@example.com
                          - address_header: bcc
                            email: nancy@example.com
                        create_timestamp: '2023-11-02T05:36:41.258Z'
                        create_user: string
                        last_update_timestamp: '2023-11-02T05:36:41.258Z'
                        last_update_user: string
                teams settings:
                  value:
                    result: 200
                    message: SUCCESS
                    ts: '2023-11-02T05:36:41.258Z'
                    data:
                      - id: 00000001Z7ZXFAED6872F6C9W8
                        name: destinations of teams settings
                        kind: Teams
                        conditions:
                          ita:
                            event_type:
                              new: true
                              evaluated: true
                              timeout: false
                              undetected: false
                        destination_informations:
                          - webhook: 'https://xxxxxxxx.webhook.office.com/webhookb/xxxxxxxx-xxxxxx-xxxx-xxxx-xxxxxxxxxxxx'
                        create_timestamp: '2023-11-02T05:36:41.258Z'
                        create_user: string
                        last_update_timestamp: '2023-11-02T05:36:41.258Z'
                        last_update_user: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    post:
      tags:
        - NotificationService
      summary: Create creates an settings notifications
      x-openapi-router-controller: controllers.notification_service_controller
      operationId: settings_notification_create
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/settingsDestinationCreate'
            examples:
              mail settings:
                value:
                  - id: 00000001Z7ZXFAED6872F6C9W8
                    name: destinations of mail settings
                    kind: Mail
                    conditions:
                      ita:
                        event_type:
                          new: false
                          evaluated: false
                          timeout: true
                          undetected: true
                    destination_informations:
                      - address_header: to
                        email: mike@example.com
                      - address_header: cc
                        email: tommy@example.com
                      - address_header: bcc
                        email: nancy@example.com
              teams settings:
                value:
                  - id: 00000001Z7ZXFAED6872F6C9W9
                    name: destinations of teams settings
                    kind: Teams
                    conditions:
                      ita:
                        event_type:
                          new: true
                          evaluated: true
                          timeout: false
                          undetected: false
                    destination_informations:
                      - webhook: 'https://xxxxxxxx.webhook.office.com/webhookb/xxxxxxxx-xxxxxx-xxxx-xxxx-xxxxxxxxxxxx'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/api/{organization_id}/platform/workspaces/{workspace_id}/settings/notifications/{destination_id}':
    get:
      tags:
        - NotificationService
      summary: Returns of settings destination
      x-openapi-router-controller: controllers.notification_service_controller
      operationId: settings_destination_get
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
        - name: destination_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/settingsDestinationOne'
                  - $ref: '#/components/schemas/responseStat'
              examples:
                mail settings:
                  value:
                    result: 200
                    message: SUCCESS
                    ts: '2023-11-02T05:36:41.258Z'
                    data:
                      id: 00000001Z7ZXFAED6872F6C9W8
                      name: destinations of mail settings
                      kind: Mail
                      conditions:
                        ita:
                          event_type:
                            new: false
                            evaluated: false
                            timeout: true
                            undetected: true
                      destination_informations:
                        - address_header: to
                          email: mike@example.com
                        - address_header: cc
                          email: tommy@example.com
                        - address_header: bcc
                          email: nancy@example.com
                      create_timestamp: '2023-11-02T05:36:41.258Z'
                      create_user: string
                      last_update_timestamp: '2023-11-02T05:36:41.258Z'
                      last_update_user: string
                teams settings:
                  value:
                    result: 200
                    message: SUCCESS
                    ts: '2023-11-02T05:36:41.258Z'
                    data:
                      id: 00000001Z7ZXFAED6872F6C9W8
                      name: destinations of teams settings
                      kind: Teams
                      conditions:
                        ita:
                          event_type:
                            new: true
                            evaluated: true
                            timeout: false
                            undetected: false
                      destination_informations:
                        - webhook: 'https://xxxxxxxx.webhook.office.com/webhookb/xxxxxxxx-xxxxxx-xxxx-xxxx-xxxxxxxxxxxx'
                      create_timestamp: '2023-11-02T05:36:41.258Z'
                      create_user: string
                      last_update_timestamp: '2023-11-02T05:36:41.258Z'
                      last_update_user: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    put:
      tags:
        - NotificationService
      summary: Put an settings notification
      x-openapi-router-controller: controllers.notification_service_controller
      operationId: settings_notification_put
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
        - name: destination_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsDestinationPut'
            examples:
              mail settings:
                value:
                  name: destinations of mail settings
                  kind: Mail
                  conditions:
                    ita:
                      event_type:
                        new: true
                        evaluated: true
                        timeout: true
                        undetected: true
                  destination_informations:
                    - address_header: to
                      email: mike@example.com
                    - address_header: cc
                      email: tommy@example.com
                    - address_header: bcc
                      email: nancy@example.com
              teams settings:
                value:
                  name: destinations of teams settings
                  kind: Teams
                  conditions:
                    ita:
                      event_type:
                        new: true
                        evaluated: true
                        timeout: true
                        undetected: true
                  destination_informations:
                    - webhook: 'https://xxxxxxxx.webhook.office.com/webhookb/xxxxxxxx-xxxxxx-xxxx-xxxx-xxxxxxxxxxxx'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    delete:
      tags:
        - NotificationService
      summary: Delete deletes an notification
      x-openapi-router-controller: controllers.notification_service_controller
      operationId: notification_delete
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
        - name: destination_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseOk'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/api/{organization_id}/platform/workspaces/{workspace_id}/notifications':
    get:
      tags:
        - NotificationService
      summary: Returns a list of message notifications
      x-openapi-router-controller: controllers.notification_service_controller
      operationId: notification_list
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
        - name: page_size
          in: query
          description: 'Maximum number of return values ​​at one time (default: 100)'
          schema:
            type: number
            minimum: 1
            default: 100
        - name: current_page
          in: query
          description: 'Current display page (default: 1)'
          schema:
            type: number
            minimum: 1
            default: 1
        - name: details_info
          in: query
          description: With message output
          schema:
            type: boolean
            default: false
        - name: func_id
          in: query
          description: Filter by function ID
          schema:
            type: string
        - name: match
          in: query
          description: |
            Specify exact match condition. Separate with "," specify the item name in the odd numbered columns and the search character in the even numbered columns.
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
          example: 'match=save_year,2023,save_month,12'
        - name: like_before
          in: query
          description: |
            Specifying conditions for beginning match. Separate with "," specify the item name in the odd numbered columns and the search character in the even numbered columns.
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: like_after
          in: query
          description: |
            Specifying conditions for suffix match. Separate with "," specify the item name in the odd numbered columns and the search character in the even numbered columns.
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: like_all
          in: query
          description: |
            Specifying conditions for fuzzy search. Separate with "," specify the item name in the odd numbered columns and the search character in the even numbered columns.
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/workspaceList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    post:
      tags:
        - NotificationService
      summary: Register for message notifications
      x-openapi-router-controller: controllers.notification_service_controller
      operationId: notification_register
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/notifications.create'
            examples:
              mail message post:
                value:
                  - destination_id: 00000001Z7ZXFAED6872F6C9W8
                    func_id: '00000000'
                    func_informations:
                      key-1: value-1
                      key-2: value-2
                    message:
                      title: subjects
                      message: event message
              teams message post:
                value:
                  - destination_id: 00000001Z7ZXFAED6872F6C9W9
                    func_id: '00000000'
                    func_informations:
                      key-1: value-1
                      key-2: value-2
                    message:
                      title: send title
                      text: send message
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/api/{organization_id}/platform/users':
    get:
      tags:
        - UsersService
      summary: List returns list of users
      x-openapi-router-controller: controllers.users_service_controller
      operationId: user_list
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: first
          in: query
          description: first result to return
          schema:
            type: integer
            example: 0
            default: 0
            minimum: 0
        - name: max
          in: query
          description: maximum number of results to return
          schema:
            type: integer
            example: 100
            default: 100
        - name: search
          in: query
          description: 'A String contained in username, first or last name, or email'
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/userList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    post:
      tags:
        - UsersService
      summary: Create creates user
      x-openapi-router-controller: controllers.users_service_controller
      operationId: user_create
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userCreate'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/api/{organization_id}/platform/users/{user_id}':
    get:
      tags:
        - UsersService
      summary: Get a user
      x-openapi-router-controller: controllers.users_service_controller
      operationId: user_get
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/user'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    put:
      tags:
        - UsersService
      summary: Update a user
      x-openapi-router-controller: controllers.users_service_controller
      operationId: user_update
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userUpdate'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    delete:
      tags:
        - UsersService
      summary: Delete a user
      x-openapi-router-controller: controllers.users_service_controller
      operationId: user_delete
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/api/{organization_id}/platform/roles':
    get:
      tags:
        - RoleService
      summary: List returns list of roles
      x-openapi-router-controller: controllers.role_service_controller
      operationId: role_list
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: kind
          in: query
          description: role kind.
          schema:
            type: string
            enum:
              - workspace
              - organization
            example: workspace
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/roleDetailList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    post:
      tags:
        - RoleService
      summary: Create creates an role
      x-openapi-router-controller: controllers.role_service_controller
      operationId: role_create
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/roleDetailWorkspace'
            examples:
              workspace:
                value:
                  name: role-1
                  description: role description
                  kind: workspace
                  workspaces:
                    - id: workspace-1
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/api/{organization_id}/platform/roles/{role_name}':
    put:
      tags:
        - RoleService
      summary: Update a role
      x-openapi-router-controller: controllers.role_service_controller
      operationId: role_update
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: role_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/roleDetailWorkspacePut'
            examples:
              workspace:
                value:
                  description: role description
                  kind: workspace
                  workspaces:
                    - id: workspace-1
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    delete:
      tags:
        - RoleService
      summary: Delete a role
      x-openapi-router-controller: controllers.role_service_controller
      operationId: role_delete
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: role_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/api/{organization_id}/platform/roles/{role_name}/users':
    get:
      tags:
        - RoleMappingsService
      summary: Get user-role mapping for a role
      x-openapi-router-controller: controllers.role_mappings_service_controller
      operationId: role_user_mapping_get
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: role_name
          in: path
          required: true
          schema:
            type: string
        - name: first
          in: query
          description: first result to return
          schema:
            type: integer
            example: 0
            default: 0
            minimum: 0
        - name: max
          in: query
          description: maximum number of results to return
          schema:
            type: integer
            example: 100
            default: 100
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - title: roleList is list of Role resources.
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/roleUser'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    post:
      tags:
        - RoleMappingsService
      summary: Add roles to the user role mapping
      x-openapi-router-controller: controllers.role_mappings_service_controller
      operationId: role_user_mapping_create
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: role_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/roleMappingUser'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    patch:
      tags:
        - RoleMappingsService
      summary: Delete roles from user role mapping
      x-openapi-router-controller: controllers.role_mappings_service_controller
      operationId: role_user_mapping_delete
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: role_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/roleMappingUser'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  /api/platform/maintenance-mode-setting:
    get:
      tags:
        - MaintenanceModeService
      description: メンテナンスモードの設定を取得する
      operationId: get_maintenance_mode_setting
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/maintenanceModeSettings'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.maintenance_mode_setting_controller
    patch:
      tags:
        - MaintenanceModeService
      description: メンテナンスモードの設定を更新する
      operationId: patch_maintenance_mode_setting
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                backyard_execute_stop:
                  type: string
                  example: '1'
                data_update_stop:
                  type: string
                  example: '1'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.maintenance_mode_setting_controller
  '/api/{organization_id}/platform/maintenance-mode-setting':
    get:
      tags:
        - MaintenanceModeService
      description: メンテナンスモードの設定を取得する
      operationId: get_maintenance_mode_setting_organization
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/maintenanceModeSettings'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.maintenance_mode_setting_controller
  /internal-api/alive:
    get:
      tags:
        - InternalCommonService
      summary: alive
      x-openapi-router-controller: controllers.internal_common_service_controller
      operationId: alive
      parameters:
        - name: User-Id
          in: header
          required: true
          schema:
            type: string
        - name: Roles
          in: header
          required: true
          schema:
            type: string
        - name: Language
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  /internal-api/platform/settings/common:
    get:
      tags:
        - InternalCommonService
      summary: Returns the current system config value
      x-openapi-router-controller: controllers.internal_common_service_controller
      operationId: internal_settings_system_config_list
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/systemConfigList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    post:
      tags:
        - InternalCommonService
      summary: Create creates an system config value
      x-openapi-router-controller: controllers.internal_common_service_controller
      operationId: internal_settings_system_config_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/systemConfigCreate'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseOk'
        '409':
          description: Duplicate key error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeErrorConflict'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/internal-api/platform/settings/common/{config_key}':
    get:
      tags:
        - InternalCommonService
      summary: Returns the system config key value
      x-openapi-router-controller: controllers.internal_common_service_controller
      operationId: internal_settings_system_config_item
      parameters:
        - name: config_key
          in: path
          required: true
          schema:
            type: string
          description: config key
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/systemConfig'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    put:
      tags:
        - InternalCommonService
      summary: Update an system config value settings
      x-openapi-router-controller: controllers.internal_common_service_controller
      operationId: internal_settings_system_config_update
      parameters:
        - name: config_key
          in: path
          required: true
          schema:
            type: string
          description: config key
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/systemConfigUpdate'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseOk'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    delete:
      tags:
        - InternalCommonService
      summary: delete an system config value settings
      x-openapi-router-controller: controllers.internal_common_service_controller
      operationId: internal_settings_system_config_delete
      parameters:
        - name: config_key
          in: path
          required: true
          schema:
            type: string
          description: config key
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseOk'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/internal-api/{organization_id}/platform/limits':
    get:
      tags:
        - InternalPlanService
      summary: Returns the current limits value
      x-openapi-router-controller: controllers.internal_plan_service_controller
      operationId: internal_organization_limits_get
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: limit_id
          in: query
          description: filter limit id. (prefix match)
          schema:
            type: string
            example: platform.workspaces
        - name: User-Id
          in: header
          required: true
          schema:
            type: string
        - name: Roles
          in: header
          required: true
          schema:
            type: string
        - name: Language
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/limits'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  /internal-api/platform/limits:
    get:
      tags:
        - InternalPlanService
      summary: Returns the current limits value
      x-openapi-router-controller: controllers.internal_plan_service_controller
      operationId: limits_get
      parameters:
        - name: limit_id
          in: query
          description: filter limit id. (prefix match)
          schema:
            type: string
            example: platform.workspaces
        - name: User-Id
          in: header
          required: true
          schema:
            type: string
        - name: Roles
          in: header
          required: true
          schema:
            type: string
        - name: Language
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/limitsList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  /internal-api/platform/plan_items:
    post:
      tags:
        - InternalPlanService
      summary: Create a plan items
      x-openapi-router-controller: controllers.internal_plan_service_controller
      operationId: plan_item_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/planItemList'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseOk'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/internal-api/platform/plan_items/{limit_id}':
    get:
      tags:
        - InternalPlanService
      summary: Returns of plan item
      x-openapi-router-controller: controllers.internal_plan_service_controller
      operationId: internal_plan_item_get
      parameters:
        - name: limit_id
          in: path
          required: true
          schema:
            type: string
          description: limit id
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/planItem'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    put:
      tags:
        - InternalPlanService
      summary: Update a plan item
      x-openapi-router-controller: controllers.internal_plan_service_controller
      operationId: internal_plan_item_update
      parameters:
        - name: limit_id
          in: path
          required: true
          schema:
            type: string
          description: limit id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/planItemFields'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseOk'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    delete:
      tags:
        - InternalPlanService
      summary: Delete a plan item
      x-openapi-router-controller: controllers.internal_plan_service_controller
      operationId: internal_plan_item_delete
      parameters:
        - name: limit_id
          in: path
          required: true
          schema:
            type: string
          description: limit id
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseOk'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/internal-api/{organization_id}/platform/workspaces/{workspace_id}/roles':
    get:
      tags:
        - InternalWorkspaceService
      summary: Get all roles for the workspace
      x-openapi-router-controller: controllers.internal_workspace_service_controller
      operationId: workspace_role_list
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
        - name: User-Id
          in: header
          required: true
          schema:
            type: string
        - name: Roles
          in: header
          required: true
          schema:
            type: string
        - name: Language
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/roleList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/internal-api/{organization_id}/platform/workspaces/{workspace_id}/users':
    get:
      tags:
        - InternalWorkspaceService
      summary: Get all users for the workspace
      x-openapi-router-controller: controllers.internal_workspace_service_controller
      operationId: workspace_user_list
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
        - name: User-Id
          in: header
          required: true
          schema:
            type: string
        - name: Roles
          in: header
          required: true
          schema:
            type: string
        - name: Language
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/userList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/internal-api/{organization_id}/platform/users/{user_id}/workspaces':
    get:
      tags:
        - InternalUsersService
      summary: workspaces list of user posible
      operationId: user_workspace_list
      parameters:
        - name: organization_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: user_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: User-Id
          in: header
          required: true
          schema:
            type: string
        - name: Roles
          in: header
          required: true
          schema:
            type: string
        - name: Language
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/userWorkspaceList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.internal_users_service_controller
  /internal-api/platform/maintenance-mode-setting:
    get:
      tags:
        - InternalMaintenanceModeService
      description: メンテナンスモードの設定を取得する
      operationId: internal_get_maintenance_mode_setting
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/maintenanceModeSettings'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.internal_maintenance_mode_setting_controller
  '/internal-api/{organization_id}/platform/workspaces/{workspace_id}/settings/notifications':
    get:
      tags:
        - InternalNotificationService
      summary: List returns list of settings notifications
      x-openapi-router-controller: controllers.internal_notification_service_controller
      operationId: internal_settings_notification_list
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
        - name: event_type_true
          in: query
          schema:
            type: array
            items:
              type: string
          style: pipeDelimited
          explode: false
          description: 'When acquiring information where event_type is True, specify the corresponding item name'
        - name: event_type_false
          in: query
          schema:
            type: array
            items:
              type: string
          style: pipeDelimited
          explode: false
          description: 'When acquiring information where event_type is False, specify the corresponding item name'
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/settingsDestinationList'
              examples:
                mail settings:
                  $ref: '#/paths/~1api~1%7Borganization_id%7D~1platform~1workspaces~1%7Bworkspace_id%7D~1settings~1notifications/get/responses/200/content/application~1json/examples/mail%20settings'
                teams settings:
                  $ref: '#/paths/~1api~1%7Borganization_id%7D~1platform~1workspaces~1%7Bworkspace_id%7D~1settings~1notifications/get/responses/200/content/application~1json/examples/teams%20settings'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/internal-api/{organization_id}/platform/workspaces/{workspace_id}/settings/notifications/{destination_id}':
    get:
      tags:
        - InternalNotificationService
      summary: Returns of settings destination
      x-openapi-router-controller: controllers.internal_notification_service_controller
      operationId: internal_settings_destination_get
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
        - name: destination_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/settingsDestinationOne'
                  - $ref: '#/components/schemas/responseStat'
              examples:
                mail settings:
                  $ref: '#/paths/~1api~1%7Borganization_id%7D~1platform~1workspaces~1%7Bworkspace_id%7D~1settings~1notifications~1%7Bdestination_id%7D/get/responses/200/content/application~1json/examples/mail%20settings'
                teams settings:
                  $ref: '#/paths/~1api~1%7Borganization_id%7D~1platform~1workspaces~1%7Bworkspace_id%7D~1settings~1notifications~1%7Bdestination_id%7D/get/responses/200/content/application~1json/examples/teams%20settings'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  '/internal-api/{organization_id}/platform/workspaces/{workspace_id}/notifications':
    get:
      tags:
        - InternalNotificationService
      summary: Returns a list of message notifications
      x-openapi-router-controller: controllers.internal_notification_service_controller
      operationId: internal_notification_list
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
        - name: page_size
          in: query
          description: 'Maximum number of return values ​​at one time (default: 100)'
          schema:
            type: number
            minimum: 1
            default: 100
        - name: current_page
          in: query
          description: 'Current display page (default: 1)'
          schema:
            type: number
            minimum: 1
            default: 1
        - name: details_info
          in: query
          description: With message output
          schema:
            type: boolean
            default: false
        - name: func_id
          in: query
          description: Filter by function ID
          schema:
            type: string
        - name: match
          in: query
          description: |
            Specify exact match condition. Separate with "," specify the item name in the odd numbered columns and the search character in the even numbered columns.
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
          example: 'match=save_year,2023,save_month,12'
        - name: like_before
          in: query
          description: |
            Specifying conditions for beginning match. Separate with "," specify the item name in the odd numbered columns and the search character in the even numbered columns.
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: like_after
          in: query
          description: |
            Specifying conditions for suffix match. Separate with "," specify the item name in the odd numbered columns and the search character in the even numbered columns.
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: like_all
          in: query
          description: |
            Specifying conditions for fuzzy search. Separate with "," specify the item name in the odd numbered columns and the search character in the even numbered columns.
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - $ref: '#/components/schemas/workspaceList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    post:
      tags:
        - InternalNotificationService
      summary: Register for message notifications
      x-openapi-router-controller: controllers.internal_notification_service_controller
      operationId: internal_notification_register
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: string
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/notifications.create'
            examples:
              mail message post:
                $ref: '#/paths/~1api~1%7Borganization_id%7D~1platform~1workspaces~1%7Bworkspace_id%7D~1notifications/post/requestBody/content/application~1json/examples/mail%20message%20post'
              teams message post:
                $ref: '#/paths/~1api~1%7Borganization_id%7D~1platform~1workspaces~1%7Bworkspace_id%7D~1notifications/post/requestBody/content/application~1json/examples/teams%20message%20post'
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/responseOk'
                  - type: object
                    properties:
                      data:
                        type: object
                        example: null
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
components:
  schemas:
    responseOk:
      title: A successful base response.
      type: object
      properties:
        result:
          type: integer
          example: 200
        message:
          type: string
          example: SUCCESS
        ts:
          type: string
          format: date-time
    responseStat:
      type: object
      properties:
        create_timestamp:
          type: string
          format: date-time
        create_user:
          type: string
        last_update_timestamp:
          type: string
          format: date-time
        last_update_user:
          type: string
    runtimeError:
      type: object
      properties:
        result:
          type: integer
          format: int32
          example: 500
        message:
          type: string
          example: Error Message
        ts:
          type: string
          format: date-time
        data:
          type: object
          example: null
    runtimeErrorConflict:
      type: object
      properties:
        result:
          type: integer
          format: int32
          example: 409
        message:
          type: string
          example: Error Message
        ts:
          type: string
          format: date-time
        data:
          type: object
          example: null
    organization:
      title: organization is a definition of Organization resource.
      type: object
      properties:
        id:
          type: string
          example: org1
        name:
          type: string
          example: name of org1
        organization_managers:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              username:
                type: string
              name:
                type: string
                example: firstname lastname
              firstName:
                type: string
              lastName:
                type: string
              email:
                type: string
              enabled:
                type: boolean
              create_timestamp:
                type: string
                format: date-time
        active_plan:
          type: object
          properties:
            id:
              type: string
              example: plan-1
        plans:
          type: array
          items:
            $ref: '#/components/schemas/planMappingOrganization'
        enabled:
          type: boolean
          description: organization enabled(true) or disabled(false)
          example: true
        status:
          type: string
          example: Organization Create Complete
    organizationCreate:
      title: organization is a definition of Organization resource.
      type: object
      properties:
        id:
          type: string
          example: org1
        name:
          type: string
          example: organization of org1
        organization_managers:
          type: array
          items:
            $ref: '#/components/schemas/organizationUserCreate'
        plan:
          type: object
          properties:
            id:
              type: string
              example: plan-1
        options:
          type: object
          description: Organization Add Json Parameter (json of KeyCloak)
        optionsIta:
          type: object
          description: Organization Add Json Parameter (json of exastro-it-automation)
          properties:
            no_install_driver:
              type: array
              items:
                description: 'terraform_cloud_ep: Terraform-Cloud/EPドライバ, <br/>terraform_cli: Terraform-CLIドライバ, <br/>ci_cd: CI/CD for IaC '
                type: string
                enum:
                  - terraform_cloud_ep
                  - terraform_cli
                  - ci_cd
      required:
        - id
    organizationUserCreate:
      title: organization-user is a definition of User resource.
      type: object
      properties:
        username:
          type: string
          example: user-id
        email:
          type: string
          example: user e-mail address
        firstName:
          type: string
        lastName:
          type: string
        credentials:
          type: array
          items:
            $ref: '#/components/schemas/userCredentials'
        requiredActions:
          $ref: '#/components/schemas/userRequiredActions'
        enabled:
          type: boolean
      required:
        - username
    organizationList:
      title: A list of organizational resources.
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/organization'
    organizationSetting:
      title: organizationSetting is a definition of oraganaization setting resource.
      type: object
      properties:
        token:
          type: object
          properties:
            refresh_token_max_lifespan_enabled:
              type: boolean
              example: true
            refresh_token_max_lifespan_days:
              type: integer
              example: 365
              maximum: 1095
              minimum: 1
            access_token_lifespan_minutes:
              type: integer
              example: 1440
              maximum: 10080
              minimum: 1
    planMappingOrganization:
      type: object
      required:
        - id
        - start_datetime
      properties:
        id:
          type: string
          example: plan-1
        start_datetime:
          type: string
          example: '2022-12-01 00:00:00'
    planMappingOrganizationList:
      title: plan item list is list of plan items resources.
      type: object
      properties:
        data:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/planMappingOrganization'
              - $ref: '#/components/schemas/responseStat'
    plan:
      title: plan is a definition of Plan resource.
      type: object
      properties:
        id:
          type: string
          example: plan-1
        name:
          type: string
          example: name of plan
        informations:
          type: object
          properties:
            description:
              type: string
        limits:
          type: object
          properties:
            limit.id:
              type: number
          example:
            platform.workspaces: 500
            platform.roles: 500
            platform.users: 1000
    planList:
      title: planList is list of Plan resources.
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/plan'
    planItem:
      title: planItem is a definition of plan item resource.
      allOf:
        - type: object
          properties:
            id:
              type: string
              example: platform.workspaces
              description: limit id
        - $ref: '#/components/schemas/planItemFields'
    planItemList:
      title: plan item list is list of plan items resources.
      type: array
      items:
        $ref: '#/components/schemas/planItem'
      example:
        - id: platform.workspaces
          informations:
            description: max workspaces
            max: 1000
            default: 100
    planItemFields:
      title: planItem is a definition of plan item resource.
      type: object
      properties:
        informations:
          type: object
          properties:
            description:
              type: string
            max:
              type: integer
              example: 10000
            default:
              type: integer
              example: 1000
    limits:
      title: limitValue is a definition of Limit Value resource.
      type: object
      properties:
        data:
          type: object
          properties:
            limit.id:
              type: number
          example:
            platform.workspaces: 500
            platform.roles: 500
            platform.users: 1000
    limitsList:
      title: limitValue is a definition of Limit Value resource.
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              organization_id:
                type: string
                example: organization_id
              limits:
                type: object
                properties:
                  limit.id:
                    type: number
                example:
                  platform.workspaces: 500
                  platform.roles: 500
                  platform.users: 1000
    usage:
      title: usage is a definition of current value resource.
      type: object
      properties:
        id:
          type: string
          example: platform.workspaces
        current_value:
          type: number
          example: 100
    usageList:
      title: usageList is list of usage resources.
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/usage'
          example:
            - id: platform.workspaces
              current_value: 100
            - id: platform.users
              current_value: 200
            - id: platform.roles
              current_value: 300
    usageOrganizationList:
      title: usageList is list of usage resources.
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              organization_id:
                type: string
              usages:
                type: array
                items:
                  $ref: '#/components/schemas/usage'
          example:
            - organization_id: organization_1
              usages:
                - id: platform.workspaces
                  current_value: 101
                - id: platform.users
                  current_value: 102
                - id: platform.roles
                  current_value: 103
            - organization_id: organization_2
              usages:
                - id: platform.workspaces
                  current_value: 201
                - id: platform.users
                  current_value: 202
                - id: platform.roles
                  current_value: 203
    role:
      title: role is a definition of Role resource.
      type: object
      properties:
        name:
          type: string
          example: role-1
    roleList:
      title: roleList is list of Role resources.
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/role'
    usernameOnly:
      title: username of User resource.
      type: object
      properties:
        username:
          type: string
    user:
      title: user is a definition of User resource.
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: firstname lastname
        firstName:
          type: string
        lastName:
          type: string
        preferred_username:
          type: string
        affiliation:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        create_timestamp:
          type: string
          format: date-time
    userList:
      title: userList is list of User resources.
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/user'
    userCreate:
      title: user is a definition of User resource.
      type: object
      properties:
        username:
          type: string
          example: user-id
        password:
          type: string
          example: password
        password_temporary:
          type: boolean
          default: true
        email:
          type: string
          example: user e-mail address
        firstName:
          type: string
        lastName:
          type: string
        affiliation:
          type: string
        description:
          type: string
        enabled:
          type: boolean
          default: true
      required:
        - username
        - password
    userUpdate:
      title: userUpate is a definition of User resource.
      type: object
      properties:
        password:
          type: string
          example: password
        password_temporary:
          type: boolean
          default: true
        email:
          type: string
          example: user e-mail address
        firstName:
          type: string
        lastName:
          type: string
        affiliation:
          type: string
        description:
          type: string
        enabled:
          type: boolean
          default: true
    userCredentials:
      title: userCredentials is Credentials of User resources.
      type: object
      properties:
        type:
          type: string
          example: password
        value:
          type: string
          example: password
        temporary:
          type: boolean
          example: true
    userRequiredActions:
      title: userRequiredActions is RequiredActions of User resources.
      type: array
      items:
        type: string
        example: UPDATE_PROFILE
        description: \"UPDATE_PROFILE\" or \"UPDATE_PASSWORD\" or \"VERIFY EMAIL\" or \"UPDATE USER LOCAL\" or \"CONFIGURE OTP\"
    member:
      title: member is a definition of Member resource.
      type: object
      properties:
        name:
          type: string
          example: firstname lastname
        firstName:
          type: string
        lastName:
          type: string
    memberList:
      title: memberList is list of Member resources.
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/member'
    notifications.create:
      title: Notification is a definition of Notification resource.
      type: object
      properties:
        destination_id:
          type: string
          description: Destination ID is a 26-digit string
        func_id:
          type: string
          description: Function ID unique to the caller (for filtering)
        func_informations:
          type: object
          description: Caller-specific details (for filtering)
        message:
          type: object
          description: 'Webhook systems simply pass the value as the body. For e-mail, construct Json after reserving title and text'
      required:
        - destination_id
        - func_id
        - message
    workspace:
      title: workspace is a definition of Workspace resource.
      type: object
      properties:
        id:
          type: string
          example: workspace-1
        name:
          type: string
          example: name of workspace
        informations:
          type: object
          properties:
            description:
              type: string
            environments:
              type: array
              items:
                $ref: '#/components/schemas/environment'
            workspace_administrators:
              type: array
              items:
                $ref: '#/components/schemas/workspace_administrator'
    workspaceList:
      title: workspaceList is list of Workspace resources.
      type: object
      properties:
        data:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/workspace'
              - $ref: '#/components/schemas/responseStat'
    workspaceUpdate:
      title: workspace is a definition for workspace updates.
      type: object
      properties:
        name:
          type: string
          example: name of workspace
        informations:
          type: object
          properties:
            description:
              type: string
            environments:
              type: array
              items:
                $ref: '#/components/schemas/environment'
    userWorkspace:
      title: workspace is a definition of Workspace resource.
      type: object
      properties:
        id:
          type: string
          example: workspace-1
        name:
          type: string
          example: name of workspace
        create_timestamp:
          type: string
          format: date-time
        last_update_timestamp:
          type: string
          format: date-time
    userWorkspaceList:
      title: WorkspaceList is a list of workspace resources that users can access.
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/userWorkspace'
    environment:
      title: environments is a definition of Workspace information resource.
      type: object
      properties:
        name:
          type: string
          example: staging
    workspace_administrator:
      title: workspace_administrator is a definition of Workspace information resource.
      type: object
      properties:
        id:
          type: string
          example: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    roleDetailList:
      title: WorkspaceList is a list of workspace resources that users can access.
      type: object
      properties:
        data:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/roleDetailWorkspace'
              - $ref: '#/components/schemas/roleDetailOrganization'
    roleDetailOrganization:
      title: role is a definition of Role resource.
      type: object
      properties:
        name:
          type: string
          example: organization-role-1
        description:
          type: string
          example: role description
        kind:
          type: string
          example: organization
        authorities:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: _og-upd
    roleDetailWorkspace:
      title: role is a definition of Role resource.
      type: object
      properties:
        name:
          type: string
          example: role-1
        description:
          type: string
          example: role description
        kind:
          type: string
          example: workspace
        authorities:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
            example:
              - name: _workspace-1-admin
              - name: workspace-1
        workspaces:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: workspace-1
    roleDetailWorkspacePut:
      title: role is a definition of Role resource.
      type: object
      properties:
        description:
          type: string
          example: role description
        kind:
          type: string
          example: workspace
        workspaces:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: workspace-1
    roleMappingUser:
      title: userList is list of User resources.
      type: array
      items:
        $ref: '#/components/schemas/roleUser'
      example:
        - preferred_username: username-1
        - preferred_username: username-2
        - preferred_username: username-3
    roleUser:
      title: role mapping user is a definition of User resource.
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: firstname lastname
        firstName:
          type: string
        lastName:
          type: string
        preferred_username:
          type: string
        enabled:
          type: boolean
        affiliation:
          type: string
        description:
          type: string
        create_timestamp:
          type: string
          format: date-time
      required:
        - preferred_username
    tokenRequestBody:
      title: create refresh token request parameter.
      type: object
      properties:
        client_id:
          type: string
          example: '_{organization_id}-api'
        grant_type:
          type: string
          description: '"password" or "refresh_token"'
        scope:
          type: string
          example: openid offline_access
          description: Specified when grant_type = "password"
        username:
          type: string
          description: Specified when grant_type = "password"
        password:
          type: string
          example: password
          description: Specified when grant_type = "password"
        totp:
          type: string
          example: 123456
          description: one time password. Specified when grant_type = "password" and two-fatctor-authnication
        refresh_token:
          type: string
          description: Specified when grant_type = "refresh_token"
    tokenResponseOK:
      title: A successful create token.
      type: object
      properties:
        access_token:
          type: string
        expires_in:
          type: integer
        refresh_token:
          type: string
        id_token:
          type: string
        not-before-policy:
          type: integer
        session_state:
          type: string
          format: uuid
        scope:
          type: string
          example: openid profile offline_access email
    tokenResponseError:
      title: A successful create token.
      type: object
      properties:
        error:
          type: string
          example: invalid_grant
        error_description:
          type: string
          example: Invalid user credentials
    tokenRefreshList:
      title: roleList is list of Role resources.
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              start_timestamp:
                type: string
                format: date-time
              lastaccess_timestamp:
                type: string
                format: date-time
              expire_timestamp:
                type: string
                format: date-time
    systemConfig:
      title: system config is a definition of system config resource.
      type: object
      properties:
        key:
          type: string
          description: config key
          example: platform.max_organization
        value:
          type: string
          description: config value
          example: '100'
        description:
          type: string
          description: config description
          example: platform max organization
      required:
        - key
        - value
    systemConfigList:
      title: system config list is list of system config resources.
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/systemConfig'
    systemConfigCreate:
      title: system config value is a definition of system config resource.
      type: array
      items:
        $ref: '#/components/schemas/systemConfig'
      example:
        - key: platform.max_organization
          value: '100'
          description: platform max organization
    systemConfigUpdate:
      example:
        value: '100'
        description: max organization
      required:
        - value
      title: system config is a definition of system config resource.
      type: object
      properties:
        value:
          type: string
          description: config value
        description:
          type: string
          description: config description
    systemConfigValue:
      title: system config is a definition of system config resource.
      type: object
      properties:
        value:
          type: string
          description: config value
        description:
          type: string
          description: config description
      example:
        value: 100
        description: ''
    maintenanceModeSettings:
      title: maintenance mode settings resource.
      type: object
      properties:
        result:
          type: string
          example: 000-00000
        data:
          type: object
          properties:
            backyard_execute_stop:
              type: string
              example: '0'
            data_update_stop:
              type: string
              example: '0'
    settingsDestination:
      title: destination is a definition of Destination resource.
      type: object
      properties:
        id:
          type: string
          description: Destination ID is a 26-digit string
        name:
          type: string
          description: Destination name can be any string
        kind:
          type: string
          description: Select destination kind from Mail/Teams/Webhook
        conditions:
          $ref: '#/components/schemas/settingsDestinationConditions'
        destination_informations:
          type: array
          items:
            type: object
            description: Set the destination information for the destination
            oneOf:
              - $ref: '#/components/schemas/settingsDestinationSubDestinationInformationsMail'
              - $ref: '#/components/schemas/settingsDestinationSubDestinationInformationsTeams'
    settingsDestinationList:
      title: destinationList is list of Destination resources.
      type: object
      properties:
        data:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/settingsDestination'
              - $ref: '#/components/schemas/responseStat'
    settingsDestinationOne:
      title: destination is a definition of Destination resource.
      type: object
      properties:
        data:
          $ref: '#/components/schemas/settingsDestination'
    settingsDestinationCreate:
      title: destination is a definition of Destination resource.
      type: object
      properties:
        id:
          type: string
          description: Destination ID is a 26-digit string
        name:
          type: string
          description: Destination name can be any string
        kind:
          type: string
          enum:
            - Mail
            - Teams
            - Webhook
          description: Select destination kind from Mail/Teams/Webhook
        conditions:
          $ref: '#/components/schemas/settingsDestinationConditions'
        destination_informations:
          type: array
          items:
            type: object
            description: Set the destination information for the destination
            anyOf:
              - $ref: '#/components/schemas/settingsDestinationSubDestinationInformationsMail'
              - $ref: '#/components/schemas/settingsDestinationSubDestinationInformationsTeams'
      required:
        - id
        - name
        - kind
        - conditions
        - destination_informations
    settingsDestinationPut:
      title: destination is a definition of Destination resource.
      type: object
      properties:
        name:
          type: string
          description: Destination name can be any string
        kind:
          type: string
          enum:
            - Mail
            - Teams
            - Webhook
          description: Select destination kind from Mail/Teams/Webhook
        conditions:
          $ref: '#/components/schemas/settingsDestinationConditions'
        destination_informations:
          type: array
          items:
            type: object
            description: Set the destination information for the destination
            anyOf:
              - $ref: '#/components/schemas/settingsDestinationSubDestinationInformationsMail'
              - $ref: '#/components/schemas/settingsDestinationSubDestinationInformationsTeams'
      required:
        - name
        - kind
        - conditions
        - destination_informations
    settingsDestinationSubDestinationInformationsMail:
      title: destinations destination_informations(mail) resource.
      type: object
      properties:
        address_header:
          type: string
          description: Header to set email address
        email:
          type: string
          description: email address
    settingsDestinationSubDestinationInformationsTeams:
      title: destinations destination_informations(teams) resource.
      type: object
      properties:
        webhook:
          type: string
          description: teams webhook url
    settingsDestinationConditions:
      title: destinations conditions resource.
      type: object
      properties:
        ita:
          type: object
          description: Exastro IT Automation conditions
          properties:
            event_type:
              type: object
              description: event type
              properties:
                new:
                  type: boolean
                  description: Whether to be notified of new events
                evaluated:
                  type: boolean
                  description: Whether to be notified of evaluated event
                timeout:
                  type: boolean
                  description: Whether to be notified of timeout event
                undetected:
                  type: boolean
                  description: Whether to be notified of undetected event
              required:
                - new
                - evaluated
                - timeout
                - undetected
          required:
            - event_type
      required:
        - ita
  securitySchemes:
    BearerAuth:
      description: Credentials or access token for API
      type: http
      scheme: bearer
      bearerFormat: JWT
    BasicAuth:
      description: Value converted from ID/Password in base64
      type: http
      scheme: basic
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
security:
  - BearerAuth: []
  - BasicAuth: []
